# 5. Plotting Cylinders vs. Displacement with Color
ggplot(mpg, aes(x = cyl, y = displ, color = displ)) +
geom_point() +
labs(
title = "Relationship between No. of Cylinders and Engine Displacement",
x = "Number of Cylinders",
y = "Engine Displacement (liters)"
) +
theme_minimal()
# . Plotting Cylinders vs. Displacement with Color
ggplot(mpg_data, aes(x = cyl, y = displ, color = displ)) +
geom_point() +
labs(title = "Relationship Between No. of Cylinders and Engine Displacement")
# 4. Count Cars per Model with Pipe and Plot
# 4.a Grouping and Counting Models
model_count <- mpg_data %>%
group_by(model) %>%
summarize(car_count = n()) %>%
arrange(desc(car_count))
# 6. Plotting Cylinders vs. Displacement with Color
ggplot(mpg_data, aes(x = cyl, y = displ, color = displ)) +
geom_point() +
labs(title = "Relationship Between No. of Cylinders and Engine Displacement")
# 3. Plotting Model and Year (Top 20 Observations)
top20_data <- head(mpg_data, 20)
# 1. Use the dataset mpg
# 1.a Importing a CSV File
mpg_data <- read.csv("D:/RStudio/RWorksheet4/4c/mpg.csv")
# 1.b Categorical Variables
# Categorical Variables: manufacturer, model, trans, drv, fl, and class.
# 1.c Continuous Variables
# Continuous Variables: displ, year, cyl, cty, and hwy.
# 2. Analysis of Manufacturers and Models
# 2.a Find Manufacturer with Most Models and Model with Most Variations
library(dplyr)
most_models <- mpg_data %>%
group_by(manufacturer) %>%
summarize(model_count = n_distinct(model)) %>%
arrange(desc(model_count))
most_models
# 2.b Plotting Manufacturer and Model Counts with barplot()
barplot(most_models$model_count, names.arg = most_models$manufacturer,
main = "Manufacturer vs. Model Count", las = 2, cex.names = 0.7)
# 2. Exploring Model and Manufacturer Relationship
# 2.a Plotting the Relationship with ggplot
library(ggplot2)
ggplot(mpg_data, aes(x = model, y = manufacturer)) + geom_point()
# 2.b Improving Data Presentation
# This scatterplot is likely cluttered due to many models. To make it more readable, consider summarizing the data by counting the occurrences of each model by manufacturer.
# 3. Plotting Model and Year (Top 20 Observations)
top20_data <- head(mpg_data, 20)
ggplot(top20_data, aes(x = model, y = year)) + geom_point() +
labs(title = "Model vs Year (Top 20 Observations)")
# 4. Count Cars per Model with Pipe and Plot
# 4.a Grouping and Counting Models
model_count <- mpg_data %>%
group_by(model) %>%
summarize(car_count = n()) %>%
arrange(desc(car_count))
model_count
# .b Plotting with geom_bar() and coord_flip()
ggplot(model_count[1:20, ], aes(x = reorder(model, car_count), y = car_count)) +
geom_bar(stat = "identity", fill = "skyblue") +
coord_flip() +
labs(title = "Top 20 Models by Car Count", x = "Model", y = "Car Count")
# 6. Plotting Cylinders vs. Displacement with Color
ggplot(mpg_data, aes(x = cyl, y = displ, color = displ)) +
geom_point() +
labs(title = "Relationship Between No. of Cylinders and Engine Displacement")
# This plot displays the relationship between the number of cylinders (cyl) and engine displacement (displ), with color indicating the level of displacement.
# 7. Plotting Displacement vs. Highway MPG
ggplot(mpg_data, aes(x = displ, y = hwy, color = hwy)) + geom_point() +
labs(title = "Relationship Between Displacement and Highway MPG")
# This plot shows how highway miles per gallon (hwy) varies with engine displacement (displ), with color depicting fuel efficiency on highways.
# 8. Importing traffic.csv into R
# 8.a Number of Observations and Variables
traffic_data <- read.csv("D:/RStudio/RWorksheet4/4c/traffic.csv")
dim(traffic_data)  # Returns the number of rows and columns
names(traffic_data)  # Lists the variable names
# 8.b Subsetting Traffic Dataset by Junctions
traffic_junctions <- traffic_data %>%
group_by(Junction) %>%
summarize(count = n())
traffic_junctions
# If the column names are correct, create the plot
ggplot(traffic_data, aes(x = DateTime, y = Vehicles, color = Junction)) +
geom_line() +
labs(title = "Traffic Volume by Junction Over Time", x = "Time", y = "Traffic Volume")
# 9. Importing alexa_file.xlsx
# 9.a Number of Observations and Columns
library(readxl)
alexa_data <- read_excel("D:/RStudio/RWorksheet4/4c/alexa_file.xlsx")
dim(alexa_data)  # Shows rows and columns
# 9.b Grouping and Summing Variations
variation_counts <- alexa_data %>%
group_by(variation) %>%
summarize(total_count = n())
variation_counts
# 9.c Plotting Variations with ggplot
ggplot(variation_counts, aes(x = variation, y = total_count, fill = variation)) +
geom_bar(stat = "identity") +
labs(title = "Alexa Variations Count", x = "Variation", y = "Count")
# 9.d Plotting Date vs. Verified Reviews with geom_line()
ggplot(alexa_data, aes(x = date, y = verified_reviews)) +
geom_line() +
labs(title = "Verified Reviews Over Time", x = "Date", y = "Verified Reviews")
# 9.e Plotting Relationship of Variations and Ratings
variation_ratings <- alexa_data %>%
group_by(variation) %>%
summarize(avg_rating = mean(rating, na.rm = TRUE))
ggplot(variation_ratings, aes(x = variation, y = avg_rating, fill = variation)) +
geom_bar(stat = "identity") +
labs(title = "Average Ratings by Variation", x = "Variation", y = "Average Rating")
# 1. Use the dataset mpg
# 1.a Importing a CSV File
mpg_data <- read.csv("D:/RStudio/RWorksheet4/4c/mpg.csv")
# 1.b Categorical Variables
# Categorical Variables: manufacturer, model, trans, drv, fl, and class.
# 1.c Continuous Variables
# Continuous Variables: displ, year, cyl, cty, and hwy.
# 2. Analysis of Manufacturers and Models
# 2.a Find Manufacturer with Most Models and Model with Most Variations
library(dplyr)
most_models <- mpg_data %>%
group_by(manufacturer) %>%
summarize(model_count = n_distinct(model)) %>%
arrange(desc(model_count))
most_models
# 2.b Plotting Manufacturer and Model Counts with barplot()
barplot(most_models$model_count, names.arg = most_models$manufacturer,
main = "Manufacturer vs. Model Count", las = 2, cex.names = 0.7)
